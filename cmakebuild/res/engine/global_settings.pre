#ifndef GLOBAL_SETTINGS 
#define GLOBAL_SETTINGS

//Important globals
#define RENDERER_INSTANCE ge_renderer_instance



//Runtime Groups IDs
#define UPDATE 0

#define PRE_RENDER 1
#define RENDER 2
#define POST_RENDER 3

#define LOADER 6

//Runtime IDs
#define RUNTIME_MAIN    "main"
#define RUNTIME_RENDER  "render"




//STANDARD VERTEX ATTRIBUTES
#define VERTEX_POSITION 0
#define NORMAL_POSITION 1
#define UV_POSITION     2

//STANDARD IMAGE LOCATIONS
#define ALBEDO_LOC   0
#define SPECULAR_LOC 1

#define ALBEDO_REF   ge_albedo_map //Todo: ID instead of name
#define SPECULAR_REF ge_specular_map //Todo: ID instead of name

//STANDARDS
#define FRAG_OUT_COL ge_fragment_colour
#define CAMERA_DIR   ge_camera_direction
#define CAMERA_POS   ge_camera_position


#define MVP			 ge_mvp
#define MVP_M		 ge_mvp_m
#define MVP_VP		 ge_mvp_vp

#define MVP_M_VP	 ge_mvp_vp * ge_mvp_m

//LIGHTING

#define MAX_POINT_LIGHTS	   	6
#define MAX_SPOT_LIGHTS			4
#define MAX_DIRECTIONAL_LIGHTS	1

//PREDEFINED UNIFORMS

#define TIME                            ge_predef_time


//UNIFORMS




#define UNIFORM_POINT_LIGHTS_IN			ge_point_lights_in
#define UNIFORM_SPOT_LIGHTS_IN			ge_spot_lights_in
#define UNIFORM_DIRECTIONAL_LIGHTS_IN	ge_directional_lights_in

#define UNIFORM_SOLID_COL               ge_solid_colour

#define CUBEMAP_0                       ge_cube_map_0_in
#define CUBEMAP_1                       ge_cube_map_1_in
#define CUBEMAP_2                       ge_cube_map_2_in



//TRANSFER @Delete

#define UNIFORM_POINT_LIGHTS_T			ge_point_lights_t
#define UNIFORM_SPOT_LIGHTS_T			ge_spot_lights_t
#define UNIFORM_DIRECTIONAL_LIGHTS_T	ge_directional_lights_t



///
///  Global Memory
///

#define GE_ENTITES_GM entities
#define CURRENT_CAMERA ge_current_camera
#define CURRENT_SKYBOX ge_current_skybox



#ifdef DEF_GS_TABLE
#include <unordered_map>
#include <string>

#define GE_STRFY(m) #m
#define GE_DBL_STRFY(m) GE_STRFY(m)

std::unordered_map<std::string, std::string> ge_global_settings_map = {
    {GE_STRFY(RENDER),GE_DBL_STRFY(RENDER)},
    {GE_STRFY(PRE_RENDER),GE_DBL_STRFY(PRE_RENDER)},
    {GE_STRFY(POST_RENDER),GE_DBL_STRFY(POST_RENDER)},
    {GE_STRFY(UPDATE),GE_DBL_STRFY(UPDATE)},
    {GE_STRFY(LOADER),GE_DBL_STRFY(LOADER)},

    //uniforms NOTE: there are more, but I don't see the point in adding them as they are bad...

    {GE_STRFY(ALBEDO_REF),GE_DBL_STRFY(ALBEDO_REF)},
    {GE_STRFY(SPECULAR_REF),GE_DBL_STRFY(SPECULAR_REF)},
    {GE_STRFY(FRAG_OUT_COL),GE_DBL_STRFY(FRAG_OUT_COL)},
    {GE_STRFY(CAMERA_DIR),GE_DBL_STRFY(CAMERA_POS)},
    {GE_STRFY(MVP),GE_DBL_STRFY(MVP)},
    {GE_STRFY(MVP_M),GE_DBL_STRFY(MVP_M)},
    {GE_STRFY(MVP_VP),GE_DBL_STRFY(MVP_VP)},
    {GE_STRFY(CUBEMAP_0),GE_DBL_STRFY(CUBEMAP_0)},
    {GE_STRFY(CUBEMAP_1),GE_DBL_STRFY(CUBEMAP_1)},
    {GE_STRFY(CUBEMAP_2),GE_DBL_STRFY(CUBEMAP_2)}

};

#endif

#endif
